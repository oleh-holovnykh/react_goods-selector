{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearSelectedGood","setState","this","className","length","type","onClick","map","good","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,aAAc,OAFlB,EAKEC,kBAAoB,WAClB,EAAKC,SAAS,CAAEF,aAAc,MANlC,4CASE,WAAU,IAAD,OACCA,EAAiBG,KAAKJ,MAAtBC,aAER,OACE,uBAAMI,UAAU,oBAAhB,UAC4B,IAAxBJ,EAAaK,OACX,oBAAID,UAAU,QAAd,+BAEA,qBAAIA,UAAU,sCAAd,oBACMJ,EADN,gBAGE,wBACE,UAAQ,cACRM,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKF,uBAKtB,uBAAOG,UAAU,QAAjB,SACE,gCAEGP,EAAMW,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OACRL,UAAWM,IACT,GACA,CAAE,+BAAgCD,IAAST,IAJ/C,UAQE,6BACKA,IAAiBS,EAEhB,wBACE,UAAQ,eACRH,KAAK,SACLF,UAAU,iBACVG,QAAS,EAAKN,kBAJhB,eAUA,wBACE,UAAQ,YACRK,KAAK,SACLF,UAAU,SACVG,QAAS,WACP,EAAKL,SAAS,CAAEF,aAAcS,KALlC,iBAcN,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGK,MA9BEA,iBAvCrB,GAAyBE,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f98ecbc1.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends React.Component <{}, State> {\n  state: State = {\n    selectedGood: 'Jam',\n  };\n\n  clearSelectedGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {(selectedGood.length === 0)\n          ? <h1 className=\"title\">No goods selected</h1>\n          : (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearSelectedGood}\n              />\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                className={classNames(\n                  '',\n                  { 'has-background-success-light': good === selectedGood },\n                )}\n                key={good}\n              >\n                <td>\n                  { (selectedGood === good)\n                    ? (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.clearSelectedGood}\n                      >\n                        -\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => {\n                          this.setState({ selectedGood: good });\n                          // eslint-disable-next-line max-len\n                        }}\n                      >\n                        +\n                      </button>\n                    )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}